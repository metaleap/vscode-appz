<?xml version="1.0"?>
<doc>
    <assembly>
        <name>vscode-appz</name>
    </assembly>
    <members>
        <member name="T:VscAppz.Vsc">
            <summary>Everything related to the running of your app.</summary>
        </member>
        <member name="F:VscAppz.Vsc.OnErrorDefaultOutputFormat">
            <summary>Used by the default `OnError` handler to print error details to stderr (aka. `Console.Error`).</summary>
        </member>
        <member name="F:VscAppz.Vsc.OnError">
             <summary>
             Reports problems during the ongoing forever-looping stdin/stdout communication
             with the `vscode-appz` VSC extension. Defaults to a stderr println. Must not be `null`.
            
             `self`── the caller, an `IVscode` instance that encountered the problem being reported.
            
             `err` ── if an `Exception`, it occurred on the C# side (I/O or JSON), else some JSON-decoded C# value from whatever was transmitted as the problem data (if anything) by VS Code.
            
             `jsonMsg` ─ if a `string`, the incoming JSON message; if a `Dictionary&lt;string, object&gt;`, the outgoing one.
             </summary>
        </member>
        <member name="M:VscAppz.Vsc.InOut(System.IO.TextReader,System.IO.TextWriter)">
            <summary>Returns an `IVscode` implementation that communicates via the specified input and output streams (with `stdIn` defaulting to `Console.In` and `stdOut` defaulting to `Console.Out`). Communication only begins its forever loop upon the first method invocation (which consequently never `return`s) on any of the `interface`s offered by the returned `IVscode`'s members.</summary>
            <param name="stdIn">If `null`, defaults to `Console.In`.</param>
            <param name="stdOut">If `null`, defaults to `Console.Out`</param>
        </member>
        <member name="T:VscAppz.IVscode">
            <summary>
            Type Definition for Visual Studio Code 1.37 Extension API
            See https://code.visualstudio.com/api for more information
            </summary>
        </member>
        <member name="P:VscAppz.IVscode.Window">
            <summary>
            Namespace for dealing with the current window of the editor. That is visible
            and active editors, as well as, UI elements to show messages, selections, and
            asking for user input.
            </summary>
        </member>
        <member name="T:VscAppz.MessageOptions">
            <summary>
            Options to configure the behavior of the message.
            </summary>
        </member>
        <member name="F:VscAppz.MessageOptions.Modal">
            <summary>
            Indicates that this message should be modal.
            </summary>
        </member>
        <member name="M:VscAppz.MessageOptions.#ctor">
            <summary>
            Options to configure the behavior of the message.
            </summary>
        </member>
        <member name="M:VscAppz.MessageOptions.#ctor(System.Boolean)">
            <summary>
            Options to configure the behavior of the message.
            </summary>
            <param name="modal"> Indicates that this message should be modal. </param>
        </member>
        <member name="T:VscAppz.MessageItem">
            <summary>
            Represents an action that is shown with an information, warning, or
            error message.
            </summary>
        </member>
        <member name="F:VscAppz.MessageItem.Title">
            <summary>
            A short title like 'Retry', 'Open Log' etc.
            </summary>
        </member>
        <member name="F:VscAppz.MessageItem.IsCloseAffordance">
            <summary>
            A hint for modal dialogs that the item should be triggered
            when the user cancels the dialog (e.g. by pressing the ESC
            key).
            
            Note: this option is ignored for non-modal messages.
            </summary>
        </member>
        <member name="F:VscAppz.MessageItem.My">
            <summary>Free-form custom data, preserved across a roundtrip.</summary>
        </member>
        <member name="M:VscAppz.MessageItem.#ctor">
            <summary>
            Represents an action that is shown with an information, warning, or
            error message.
            </summary>
        </member>
        <member name="M:VscAppz.MessageItem.#ctor(System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Represents an action that is shown with an information, warning, or
            error message.
            </summary>
            <param name="title"> A short title like 'Retry', 'Open Log' etc. </param>
            <param name="isCloseAffordance"> A hint for modal dialogs that the item should be triggered when the user cancels the dialog (e.g. by pressing the ESC key).  Note: this option is ignored for non-modal messages. </param>
            <param name="my">Free-form custom data, preserved across a roundtrip.</param>
        </member>
        <member name="T:VscAppz.InputBoxOptions">
            <summary>
            Options to configure the behavior of the input box UI.
            </summary>
        </member>
        <member name="F:VscAppz.InputBoxOptions.Value">
            <summary>
            The value to prefill in the input box.
            </summary>
        </member>
        <member name="F:VscAppz.InputBoxOptions.ValueSelection">
            <summary>
            Selection of the prefilled [`value`](#InputBoxOptions.value). Defined as tuple of two number where the
            first is the inclusive start index and the second the exclusive end index. When `undefined` the whole
            word will be selected, when empty (start equals end) only the cursor will be set,
            otherwise the defined range will be selected.
            </summary>
        </member>
        <member name="F:VscAppz.InputBoxOptions.Prompt">
            <summary>
            The text to display underneath the input box.
            </summary>
        </member>
        <member name="F:VscAppz.InputBoxOptions.PlaceHolder">
            <summary>
            An optional string to show as place holder in the input box to guide the user what to type.
            </summary>
        </member>
        <member name="F:VscAppz.InputBoxOptions.Password">
            <summary>
            Set to `true` to show a password prompt that will not show the typed value.
            </summary>
        </member>
        <member name="F:VscAppz.InputBoxOptions.IgnoreFocusOut">
            <summary>
            Set to `true` to keep the input box open when focus moves to another part of the editor or to another window.
            </summary>
        </member>
        <member name="F:VscAppz.InputBoxOptions.ValidateInput">
            <summary>
            An optional function that will be called to validate input and to give a hint
            to the user.
            
            `value` ── The current value of the input box.
            
            `return` ── A human readable string which is presented as diagnostic message.
            Return `undefined`, `null`, or the empty string when 'value' is valid.
            </summary>
        </member>
        <member name="F:VscAppz.InputBoxOptions.ValidateInput_AppzFuncId">
            <summary>For internal runtime use only.</summary>
        </member>
        <member name="M:VscAppz.InputBoxOptions.#ctor">
            <summary>
            Options to configure the behavior of the input box UI.
            </summary>
        </member>
        <member name="M:VscAppz.InputBoxOptions.#ctor(System.String,System.Nullable{System.ValueTuple{System.Int32,System.Int32}},System.String,System.String,System.Boolean,System.Boolean,System.Func{System.String,System.String})">
            <summary>
            Options to configure the behavior of the input box UI.
            </summary>
            <param name="value"> The value to prefill in the input box. </param>
            <param name="valueSelection"> Selection of the prefilled [`value`](#InputBoxOptions.value). Defined as tuple of two number where the first is the inclusive start index and the second the exclusive end index. When `undefined` the whole word will be selected, when empty (start equals end) only the cursor will be set, otherwise the defined range will be selected. </param>
            <param name="prompt"> The text to display underneath the input box. </param>
            <param name="placeHolder"> An optional string to show as place holder in the input box to guide the user what to type. </param>
            <param name="password"> Set to `true` to show a password prompt that will not show the typed value. </param>
            <param name="ignoreFocusOut"> Set to `true` to keep the input box open when focus moves to another part of the editor or to another window. </param>
            <param name="validateInput"> An optional function that will be called to validate input and to give a hint to the user.  `value` ── The current value of the input box.  `return` ── A human readable string which is presented as diagnostic message. Return `undefined`, `null`, or the empty string when 'value' is valid. </param>
        </member>
        <member name="T:VscAppz.IWindow">
            <summary>
            Namespace for dealing with the current window of the editor. That is visible
            and active editors, as well as, UI elements to show messages, selections, and
            asking for user input.
            </summary>
        </member>
        <member name="M:VscAppz.IWindow.ShowErrorMessage(System.String,System.String[],System.Action{System.String})">
            <summary>
            Show an error message.
            
            `message` ── The message to show.
            
            `items` ── A set of items that will be rendered as actions in the message.
            
            `andThen` ── A thenable that resolves to the selected item or `undefined` when being dismissed.
            </summary>
            <param name="message">
            The message to show.
            </param>
            <param name="items">
            A set of items that will be rendered as actions in the message.
            </param>
            <param name="andThen">
            A thenable that resolves to the selected item or `undefined` when being dismissed.
            </param>
        </member>
        <member name="M:VscAppz.IWindow.ShowErrorMessage(System.String,VscAppz.MessageOptions,System.String[],System.Action{System.String})">
            <summary>
            Show an error message.
            
            `message` ── The message to show.
            
            `options` ── Configures the behaviour of the message.
            
            `items` ── A set of items that will be rendered as actions in the message.
            
            `andThen` ── A thenable that resolves to the selected item or `undefined` when being dismissed.
            </summary>
            <param name="message">
            The message to show.
            </param>
            <param name="options">
            Configures the behaviour of the message.
            </param>
            <param name="items">
            A set of items that will be rendered as actions in the message.
            </param>
            <param name="andThen">
            A thenable that resolves to the selected item or `undefined` when being dismissed.
            </param>
        </member>
        <member name="M:VscAppz.IWindow.ShowErrorMessage(System.String,VscAppz.MessageItem[],System.Action{VscAppz.MessageItem})">
            <summary>
            Show an error message.
            
            `message` ── The message to show.
            
            `items` ── A set of items that will be rendered as actions in the message.
            
            `andThen` ── A thenable that resolves to the selected item or `undefined` when being dismissed.
            </summary>
            <param name="message">
            The message to show.
            </param>
            <param name="items">
            A set of items that will be rendered as actions in the message.
            </param>
            <param name="andThen">
            A thenable that resolves to the selected item or `undefined` when being dismissed.
            </param>
        </member>
        <member name="M:VscAppz.IWindow.ShowErrorMessage(System.String,VscAppz.MessageOptions,VscAppz.MessageItem[],System.Action{VscAppz.MessageItem})">
            <summary>
            Show an error message.
            
            `message` ── The message to show.
            
            `options` ── Configures the behaviour of the message.
            
            `items` ── A set of items that will be rendered as actions in the message.
            
            `andThen` ── A thenable that resolves to the selected item or `undefined` when being dismissed.
            </summary>
            <param name="message">
            The message to show.
            </param>
            <param name="options">
            Configures the behaviour of the message.
            </param>
            <param name="items">
            A set of items that will be rendered as actions in the message.
            </param>
            <param name="andThen">
            A thenable that resolves to the selected item or `undefined` when being dismissed.
            </param>
        </member>
        <member name="M:VscAppz.IWindow.ShowInformationMessage(System.String,System.String[],System.Action{System.String})">
            <summary>
            Show an information message to users. Optionally provide an array of items which will be presented as
            clickable buttons.
            
            `message` ── The message to show.
            
            `items` ── A set of items that will be rendered as actions in the message.
            
            `andThen` ── A thenable that resolves to the selected item or `undefined` when being dismissed.
            </summary>
            <param name="message">
            The message to show.
            </param>
            <param name="items">
            A set of items that will be rendered as actions in the message.
            </param>
            <param name="andThen">
            A thenable that resolves to the selected item or `undefined` when being dismissed.
            </param>
        </member>
        <member name="M:VscAppz.IWindow.ShowInformationMessage(System.String,VscAppz.MessageOptions,System.String[],System.Action{System.String})">
            <summary>
            Show an information message to users. Optionally provide an array of items which will be presented as
            clickable buttons.
            
            `message` ── The message to show.
            
            `options` ── Configures the behaviour of the message.
            
            `items` ── A set of items that will be rendered as actions in the message.
            
            `andThen` ── A thenable that resolves to the selected item or `undefined` when being dismissed.
            </summary>
            <param name="message">
            The message to show.
            </param>
            <param name="options">
            Configures the behaviour of the message.
            </param>
            <param name="items">
            A set of items that will be rendered as actions in the message.
            </param>
            <param name="andThen">
            A thenable that resolves to the selected item or `undefined` when being dismissed.
            </param>
        </member>
        <member name="M:VscAppz.IWindow.ShowInformationMessage(System.String,VscAppz.MessageItem[],System.Action{VscAppz.MessageItem})">
            <summary>
            Show an information message.
            
            `message` ── The message to show.
            
            `items` ── A set of items that will be rendered as actions in the message.
            
            `andThen` ── A thenable that resolves to the selected item or `undefined` when being dismissed.
            </summary>
            <param name="message">
            The message to show.
            </param>
            <param name="items">
            A set of items that will be rendered as actions in the message.
            </param>
            <param name="andThen">
            A thenable that resolves to the selected item or `undefined` when being dismissed.
            </param>
        </member>
        <member name="M:VscAppz.IWindow.ShowInformationMessage(System.String,VscAppz.MessageOptions,VscAppz.MessageItem[],System.Action{VscAppz.MessageItem})">
            <summary>
            Show an information message.
            
            `message` ── The message to show.
            
            `options` ── Configures the behaviour of the message.
            
            `items` ── A set of items that will be rendered as actions in the message.
            
            `andThen` ── A thenable that resolves to the selected item or `undefined` when being dismissed.
            </summary>
            <param name="message">
            The message to show.
            </param>
            <param name="options">
            Configures the behaviour of the message.
            </param>
            <param name="items">
            A set of items that will be rendered as actions in the message.
            </param>
            <param name="andThen">
            A thenable that resolves to the selected item or `undefined` when being dismissed.
            </param>
        </member>
        <member name="M:VscAppz.IWindow.ShowWarningMessage(System.String,System.String[],System.Action{System.String})">
            <summary>
            Show a warning message.
            
            `message` ── The message to show.
            
            `items` ── A set of items that will be rendered as actions in the message.
            
            `andThen` ── A thenable that resolves to the selected item or `undefined` when being dismissed.
            </summary>
            <param name="message">
            The message to show.
            </param>
            <param name="items">
            A set of items that will be rendered as actions in the message.
            </param>
            <param name="andThen">
            A thenable that resolves to the selected item or `undefined` when being dismissed.
            </param>
        </member>
        <member name="M:VscAppz.IWindow.ShowWarningMessage(System.String,VscAppz.MessageOptions,System.String[],System.Action{System.String})">
            <summary>
            Show a warning message.
            
            `message` ── The message to show.
            
            `options` ── Configures the behaviour of the message.
            
            `items` ── A set of items that will be rendered as actions in the message.
            
            `andThen` ── A thenable that resolves to the selected item or `undefined` when being dismissed.
            </summary>
            <param name="message">
            The message to show.
            </param>
            <param name="options">
            Configures the behaviour of the message.
            </param>
            <param name="items">
            A set of items that will be rendered as actions in the message.
            </param>
            <param name="andThen">
            A thenable that resolves to the selected item or `undefined` when being dismissed.
            </param>
        </member>
        <member name="M:VscAppz.IWindow.ShowWarningMessage(System.String,VscAppz.MessageItem[],System.Action{VscAppz.MessageItem})">
            <summary>
            Show a warning message.
            
            `message` ── The message to show.
            
            `items` ── A set of items that will be rendered as actions in the message.
            
            `andThen` ── A thenable that resolves to the selected item or `undefined` when being dismissed.
            </summary>
            <param name="message">
            The message to show.
            </param>
            <param name="items">
            A set of items that will be rendered as actions in the message.
            </param>
            <param name="andThen">
            A thenable that resolves to the selected item or `undefined` when being dismissed.
            </param>
        </member>
        <member name="M:VscAppz.IWindow.ShowWarningMessage(System.String,VscAppz.MessageOptions,VscAppz.MessageItem[],System.Action{VscAppz.MessageItem})">
            <summary>
            Show a warning message.
            
            `message` ── The message to show.
            
            `options` ── Configures the behaviour of the message.
            
            `items` ── A set of items that will be rendered as actions in the message.
            
            `andThen` ── A thenable that resolves to the selected item or `undefined` when being dismissed.
            </summary>
            <param name="message">
            The message to show.
            </param>
            <param name="options">
            Configures the behaviour of the message.
            </param>
            <param name="items">
            A set of items that will be rendered as actions in the message.
            </param>
            <param name="andThen">
            A thenable that resolves to the selected item or `undefined` when being dismissed.
            </param>
        </member>
        <member name="M:VscAppz.IWindow.ShowInputBox(VscAppz.InputBoxOptions,System.Action{System.String})">
            <summary>
            Opens an input box to ask the user for input.
            
            The returned value will be `undefined` if the input box was canceled (e.g. pressing ESC). Otherwise the
            returned value will be the string typed by the user or an empty string if the user did not type
            anything but dismissed the input box with OK.
            
            `options` ── Configures the behavior of the input box.
            
            `andThen` ── A promise that resolves to a string the user provided or to `undefined` in case of dismissal.
            </summary>
            <param name="options">
            Configures the behavior of the input box.
            </param>
            <param name="andThen">
            A promise that resolves to a string the user provided or to `undefined` in case of dismissal.
            </param>
        </member>
    </members>
</doc>
